{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/rahimlisarkhan/Documents/NEXT JS LESSON/Practice/NextJs-BlogProject/pages/events/list/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from 'next/router';\nimport { findEventHandler } from '../../../redux-store/action';\nimport Head from 'next/head';\nimport Eventlist from '../../../components/events/event-list';\nimport EventSearch from '../../../components/events/event-search';\nimport Layout from '../../../components/layout/layout';\nimport { useSelector } from 'react-redux';\n\nlet EventsListPage = () => {\n  const router = useRouter();\n  const {\n    events\n  } = useSelector(state => state);\n  console.log(events);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n        charset: \"UTF-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"keywords\",\n        content: \"give a short or mid description about the content keywords of your website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"give a short or mid description about the contents of your website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"author\",\n        content: \"write the name of the author of the webpage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        \"http-equi\": \"refresh\",\n        content: \"5; url='write the url of your website'\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"viewport\",\n        content: \"width=device-width, initial-scale=1.0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(EventSearch, {\n        findEventHandler: (year, month) => findEventHandler(year, month, router.push)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Eventlist, {\n        items: events\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport async function getServerSideProps() {\n  const reduxStore = initializeStore(),\n        {\n    dispatch\n  } = reduxStore;\n  const res = await getEventsData();\n  const events = [];\n\n  for (const key in res.data) {\n    events.push(_objectSpread({\n      id: key\n    }, res.data[key]));\n  }\n\n  dispatch({\n    type: actionTypes.GET_EVENTS,\n    payload: events\n  });\n  return {\n    props: {\n      initialReduxState: reduxStore.getState()\n    }\n  };\n}\nexport default EventsListPage;","map":{"version":3,"sources":["/home/rahimlisarkhan/Documents/NEXT JS LESSON/Practice/NextJs-BlogProject/pages/events/list/index.js"],"names":["useRouter","findEventHandler","Head","Eventlist","EventSearch","Layout","useSelector","EventsListPage","router","events","state","console","log","year","month","push","getServerSideProps","reduxStore","initializeStore","dispatch","res","getEventsData","key","data","id","type","actionTypes","GET_EVENTS","payload","props","initialReduxState","getState"],"mappings":";;;;;;;;;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,SAAQC,gBAAR,QAA+B,6BAA/B;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,WAAP,MAAwB,yCAAxB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAGA,IAAIC,cAAc,GAAG,MAAM;AAEvB,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAM;AAAES,IAAAA;AAAF,MAAaH,WAAW,CAACI,KAAK,IAAEA,KAAR,CAA9B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAM,QAAA,OAAO,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACA,QAAA,IAAI,EAAC,UADL;AAEA,QAAA,OAAO,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AACA,QAAA,IAAI,EAAC,aADL;AAEA,QAAA,OAAO,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,cANJ,eAUI;AACA,QAAA,IAAI,EAAC,QADL;AAEA,QAAA,OAAO,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,cAVJ,eAeI;AACA,qBAAU,SADV;AAEA,QAAA,OAAO,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,cAfJ,eAmBI;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAuBI,QAAC,MAAD;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,gBAAgB,EAAE,CAACI,IAAD,EAAMC,KAAN,KAAgBb,gBAAgB,CAACY,IAAD,EAAMC,KAAN,EAAYN,MAAM,CAACO,IAAnB;AAA/D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEN;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA,kBADJ;AA8BH,CApCD;;AAwCA,OAAO,eAAeO,kBAAf,GAAoC;AACvC,QAAMC,UAAU,GAAGC,eAAe,EAAlC;AAAA,QACK;AAAEC,IAAAA;AAAF,MAAeF,UADpB;AAGA,QAAMG,GAAG,GAAG,MAAMC,aAAa,EAA/B;AACA,QAAMZ,MAAM,GAAG,EAAf;;AACA,OAAI,MAAMa,GAAV,IAAiBF,GAAG,CAACG,IAArB,EAA0B;AACxBd,IAAAA,MAAM,CAACM,IAAP;AACES,MAAAA,EAAE,EAACF;AADL,OAEKF,GAAG,CAACG,IAAJ,CAASD,GAAT,CAFL;AAGI;;AAENH,EAAAA,QAAQ,CAAC;AAACM,IAAAA,IAAI,EAACC,WAAW,CAACC,UAAlB;AAA8BC,IAAAA,OAAO,EAACnB;AAAtC,GAAD,CAAR;AAGA,SAAO;AAAEoB,IAAAA,KAAK,EAAE;AAAEC,MAAAA,iBAAiB,EAAEb,UAAU,CAACc,QAAX;AAArB;AAAT,GAAP;AACD;AAKH,eAAexB,cAAf","sourcesContent":["import {useRouter} from 'next/router'\nimport {findEventHandler} from '../../../redux-store/action'\n\nimport Head from 'next/head'\nimport Eventlist from '../../../components/events/event-list'\nimport EventSearch from '../../../components/events/event-search'\nimport Layout from '../../../components/layout/layout'\nimport { useSelector } from 'react-redux'\n\n\nlet EventsListPage = () => {\n\n    const router = useRouter()\n    const { events } = useSelector(state=>state)\n\n    console.log(events);\n    return (\n        <>\n            <Head>\n                <meta charset=\"UTF-8\" />\n                <meta\n                name=\"keywords\"\n                content=\"give a short or mid description about the content keywords of your website\"\n                />\n                <meta\n                name=\"description\"\n                content=\"give a short or mid description about the contents of your website\"\n                />\n                <meta\n                name=\"author\"\n                content=\"write the name of the author of the webpage\"\n                />\n                {/* <meta name=\"refresh\" content=\"50\"/> */}\n                <meta\n                http-equi=\"refresh\"\n                content=\"5; url='write the url of your website'\"\n                />\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n            </Head>\n\n            <Layout>\n                <EventSearch findEventHandler={(year,month) => findEventHandler(year,month,router.push)}/>\n                <Eventlist items={events} />\n            </Layout>\n        </>\n    )\n}\n\n\n\nexport async function getServerSideProps() {\n    const reduxStore = initializeStore(),\n         { dispatch } = reduxStore\n  \n    const res = await getEventsData()\n    const events = [];\n    for(const key in res.data){\n      events.push({\n        id:key,\n        ...res.data[key]}\n        )}\n        \n    dispatch({type:actionTypes.GET_EVENTS, payload:events})  \n    \n  \n    return { props: { initialReduxState: reduxStore.getState() } }\n  }\n  \n\n\n\nexport default EventsListPage"]},"metadata":{},"sourceType":"module"}