{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/rahimlisarkhan/Documents/NEXT JS LESSON/Practice/NextJs-BlogProject/pages/events/index.js\";\nimport { useRouter } from 'next/router';\nimport { getFeaturedEvents } from '../../data/dummy-data';\nimport { findEventHandler, getEvents } from '../../redux-store/action';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; //components\n\nimport Head from 'next/head';\nimport Layout from '../../components/layout/layout';\nimport Eventlist from '../../components/events/event-list';\nimport EventSearch from '../../components/events/event-search';\n\nlet EventsPage = props => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    eventPage\n  } = useSelector(state => state);\n  console.log(props);\n  useEffect(() => {\n    dispatch(getEvents());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n        charset: \"UTF-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"keywords\",\n        content: \"give a short or mid description about the content keywords of your website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"give a short or mid description about the contents of your website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"author\",\n        content: \"write the name of the author of the webpage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        \"http-equi\": \"refresh\",\n        content: \"5; url='write the url of your website'\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"viewport\",\n        content: \"width=device-width, initial-scale=1.0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(EventSearch, {\n        findEventHandler: (year, month) => findEventHandler(year, month, router.push)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Eventlist, {\n        items: eventPage.events\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport async function getStaticProps(context) {\n  return {\n    props: {\n      eventPage: context\n    }\n  };\n}\nexport default EventsPage;","map":{"version":3,"sources":["/home/rahimlisarkhan/Documents/NEXT JS LESSON/Practice/NextJs-BlogProject/pages/events/index.js"],"names":["useRouter","getFeaturedEvents","findEventHandler","getEvents","useEffect","useDispatch","useSelector","Head","Layout","Eventlist","EventSearch","EventsPage","props","router","dispatch","eventPage","state","console","log","year","month","push","events","getStaticProps","context"],"mappings":";;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAAQC,gBAAR,EAA0BC,SAA1B,QAA0C,0BAA1C;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;;AAIA,IAAIC,UAAU,GAAIC,KAAD,IAAW;AAE1B,QAAMC,MAAM,GAAGb,SAAS,EAAxB;AAEA,QAAMc,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAACU,IAAAA;AAAD,MAAcT,WAAW,CAACU,KAAK,IAAIA,KAAV,CAA/B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACAR,EAAAA,SAAS,CAAC,MAAK;AAAEU,IAAAA,QAAQ,CAACX,SAAS,EAAV,CAAR;AAAuB,GAA/B,EAAgC,EAAhC,CAAT;AAGA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAM,QAAA,OAAO,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cANF,eAUE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAVF,eAeE;AACE,qBAAU,SADZ;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAfF,eAmBE;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAuBE,QAAC,MAAD;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,gBAAgB,EAAE,CAACgB,IAAD,EAAMC,KAAN,KAAgBlB,gBAAgB,CAACiB,IAAD,EAAMC,KAAN,EAAYP,MAAM,CAACQ,IAAnB;AAA/D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEN,SAAS,CAACO;AAA5B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA,kBADF;AA+BD,CA1CD;;AA6CA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AAI3C,SAAM;AACJZ,IAAAA,KAAK,EAAC;AACJG,MAAAA,SAAS,EAAES;AADP;AADF,GAAN;AAKD;AAED,eAAeb,UAAf","sourcesContent":["import {useRouter} from 'next/router'\nimport { getFeaturedEvents } from '../../data/dummy-data'\nimport {findEventHandler, getEvents} from '../../redux-store/action'\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n//components\nimport Head from 'next/head'\nimport Layout from '../../components/layout/layout';\nimport Eventlist from '../../components/events/event-list';\nimport EventSearch from '../../components/events/event-search';\n\n\n\nlet EventsPage = (props) => {\n\n  const router = useRouter()\n\n  const dispatch = useDispatch()\n  const {eventPage} = useSelector(state => state )\n\n  console.log(props);\n  useEffect(() =>{ dispatch(getEvents()) },[])\n\n\n  return (\n    <>\n      <Head>\n        <meta charset=\"UTF-8\" />\n        <meta\n          name=\"keywords\"\n          content=\"give a short or mid description about the content keywords of your website\"\n        />\n        <meta\n          name=\"description\"\n          content=\"give a short or mid description about the contents of your website\"\n        />\n        <meta\n          name=\"author\"\n          content=\"write the name of the author of the webpage\"\n        />\n        {/* <meta name=\"refresh\" content=\"50\"/> */}\n        <meta\n          http-equi=\"refresh\"\n          content=\"5; url='write the url of your website'\"\n        />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      </Head>\n\n      <Layout>\n          <EventSearch findEventHandler={(year,month) => findEventHandler(year,month,router.push)}/>\n          <Eventlist items={eventPage.events} />\n      </Layout>\n      \n    </>\n  )\n}\n\n\nexport async function getStaticProps(context){\n    \n\n\n  return{\n    props:{\n      eventPage: context\n    }\n  }\n}\n\nexport default EventsPage"]},"metadata":{},"sourceType":"module"}