{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/rahimlisarkhan/Documents/NEXT JS LESSON/Practice/NextJs-BlogProject/pages/events/index.js\";\nimport { useRouter } from 'next/router';\nimport { findEventHandler } from '../../redux-store/action';\nimport { initializeStore } from '../../redux-store/store';\nimport * as actionTypes from '../../redux-store/type'; //components\n\nimport Head from 'next/head';\nimport Layout from '../../components/layout/layout';\nimport Eventlist from '../../components/events/event-list';\nimport EventSearch from '../../components/events/event-search';\nimport { getEventsData } from '../../api/event';\nimport { getFeaturedEvents } from '../../data/dummy-data';\n\nlet EventsPage = props => {\n  const router = useRouter(),\n        {\n    eventPage\n  } = props.initialReduxState;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n        charset: \"UTF-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"keywords\",\n        content: \"give a short or mid description about the content keywords of your website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"give a short or mid description about the contents of your website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"author\",\n        content: \"write the name of the author of the webpage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        \"http-equi\": \"refresh\",\n        content: \"5; url='write the url of your website'\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"viewport\",\n        content: \"width=device-width, initial-scale=1.0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(EventSearch, {\n        findEventHandler: (year, month) => findEventHandler(year, month, router.push)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Eventlist, {\n        items: eventPage.isFeatured\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport async function getServerSideProps() {\n  const reduxStore = initializeStore(),\n        {\n    dispatch\n  } = reduxStore;\n  const data = await getFeaturedEvents();\n  dispatch({\n    type: actionTypes.IS_FEATURED,\n    payload: data\n  });\n  return {\n    props: {\n      initialReduxState: reduxStore.getState()\n    }\n  };\n}\nexport default EventsPage;","map":{"version":3,"sources":["/home/rahimlisarkhan/Documents/NEXT JS LESSON/Practice/NextJs-BlogProject/pages/events/index.js"],"names":["useRouter","findEventHandler","initializeStore","actionTypes","Head","Layout","Eventlist","EventSearch","getEventsData","getFeaturedEvents","EventsPage","props","router","eventPage","initialReduxState","year","month","push","isFeatured","getServerSideProps","reduxStore","dispatch","data","type","IS_FEATURED","payload","getState"],"mappings":";;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,SAAQC,gBAAR,QAA+B,0BAA/B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAO,KAAKC,WAAZ,MAA6B,wBAA7B,C,CAGA;;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,iBAAT,QAAkC,uBAAlC;;AAIA,IAAIC,UAAU,GAAIC,KAAD,IAAW;AAE1B,QAAMC,MAAM,GAAGZ,SAAS,EAAxB;AAAA,QACM;AAACa,IAAAA;AAAD,MAAcF,KAAK,CAACG,iBAD1B;AAGA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAM,QAAA,OAAO,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cANF,eAUE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAVF,eAeE;AACE,qBAAU,SADZ;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAfF,eAmBE;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAuBE,QAAC,MAAD;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,gBAAgB,EAAE,CAACC,IAAD,EAAMC,KAAN,KAAgBf,gBAAgB,CAACc,IAAD,EAAMC,KAAN,EAAYJ,MAAM,CAACK,IAAnB;AAA/D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEJ,SAAS,CAACK;AAA5B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA,kBADF;AA+BD,CApCD;;AAuCA,OAAO,eAAeC,kBAAf,GAAoC;AACzC,QAAMC,UAAU,GAAGlB,eAAe,EAAlC;AAAA,QACK;AAAEmB,IAAAA;AAAF,MAAeD,UADpB;AAGA,QAAME,IAAI,GAAG,MAAMb,iBAAiB,EAApC;AACAY,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAACpB,WAAW,CAACqB,WAAlB;AAA+BC,IAAAA,OAAO,EAACH;AAAvC,GAAD,CAAR;AAEA,SAAO;AAAEX,IAAAA,KAAK,EAAE;AAAEG,MAAAA,iBAAiB,EAAEM,UAAU,CAACM,QAAX;AAArB;AAAT,GAAP;AACD;AAED,eAAehB,UAAf","sourcesContent":["import {useRouter} from 'next/router'\nimport {findEventHandler} from '../../redux-store/action'\nimport { initializeStore } from '../../redux-store/store'\nimport * as actionTypes from '../../redux-store/type'\n\n\n//components\nimport Head from 'next/head'\nimport Layout from '../../components/layout/layout';\nimport Eventlist from '../../components/events/event-list';\nimport EventSearch from '../../components/events/event-search';\nimport { getEventsData } from '../../api/event';\nimport { getFeaturedEvents } from '../../data/dummy-data'\n\n\n\nlet EventsPage = (props) => {\n\n  const router = useRouter(),\n        {eventPage} = props.initialReduxState\n\n  return (\n    <>\n      <Head>\n        <meta charset=\"UTF-8\" />\n        <meta\n          name=\"keywords\"\n          content=\"give a short or mid description about the content keywords of your website\"\n        />\n        <meta\n          name=\"description\"\n          content=\"give a short or mid description about the contents of your website\"\n        />\n        <meta\n          name=\"author\"\n          content=\"write the name of the author of the webpage\"\n        />\n        {/* <meta name=\"refresh\" content=\"50\"/> */}\n        <meta\n          http-equi=\"refresh\"\n          content=\"5; url='write the url of your website'\"\n        />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      </Head>\n\n      <Layout>\n          <EventSearch findEventHandler={(year,month) => findEventHandler(year,month,router.push)}/>\n          <Eventlist items={eventPage.isFeatured} />\n      </Layout>\n      \n    </>\n  )\n}\n\n\nexport async function getServerSideProps() {\n  const reduxStore = initializeStore(),\n       { dispatch } = reduxStore\n\n  const data = await getFeaturedEvents()\n  dispatch({type:actionTypes.IS_FEATURED, payload:data})  \n  \n  return { props: { initialReduxState: reduxStore.getState() } }\n}\n\nexport default EventsPage\n\n\n"]},"metadata":{},"sourceType":"module"}