{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/rahimlisarkhan/Documents/NEXT JS LESSON/Practice/NextJs-BlogProject/pages/events/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from 'next/router';\nimport { findEventHandler, getEvents } from '../../redux-store/action';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { initializeStore } from '../../redux-store/store';\nimport * as actionTypes from '../../redux-store/type'; //components\n\nimport Head from 'next/head';\nimport Layout from '../../components/layout/layout';\nimport Eventlist from '../../components/events/event-list';\nimport EventSearch from '../../components/events/event-search';\nimport { getEventsData } from '../../api/event';\n\nlet EventsPage = props => {\n  console.log(props);\n  const router = useRouter(); // const dispatch = useDispatch()\n\n  const {\n    eventPage\n  } = useSelector(state => state); // console.log(eventPage);\n  // useEffect(() =>{  },[])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n        charset: \"UTF-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"keywords\",\n        content: \"give a short or mid description about the content keywords of your website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"give a short or mid description about the contents of your website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"author\",\n        content: \"write the name of the author of the webpage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        \"http-equi\": \"refresh\",\n        content: \"5; url='write the url of your website'\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"viewport\",\n        content: \"width=device-width, initial-scale=1.0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(EventSearch, {\n        findEventHandler: (year, month) => findEventHandler(year, month, router.push)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Eventlist, {\n        items: eventPage.events\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport async function getServerSideProps() {\n  const reduxStore = initializeStore();\n  const {\n    dispatch\n  } = reduxStore;\n  const res = await getEventsData();\n  const events = [];\n\n  for (const key in res.data) {\n    events.push(_objectSpread({\n      id: key\n    }, res.data[key]));\n  }\n\n  dispatch({\n    type: actionTypes.GET_EVENTS,\n    payload: events\n  });\n  return {\n    props: {\n      initialReduxState: reduxStore.getState()\n    }\n  };\n}\nexport default EventsPage;","map":{"version":3,"sources":["/home/rahimlisarkhan/Documents/NEXT JS LESSON/Practice/NextJs-BlogProject/pages/events/index.js"],"names":["useRouter","findEventHandler","getEvents","useEffect","useDispatch","useSelector","initializeStore","actionTypes","Head","Layout","Eventlist","EventSearch","getEventsData","EventsPage","props","console","log","router","eventPage","state","year","month","push","events","getServerSideProps","reduxStore","dispatch","res","key","data","id","type","GET_EVENTS","payload","initialReduxState","getState"],"mappings":";;;;;;;;;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,SAAQC,gBAAR,EAA0BC,SAA1B,QAA0C,0BAA1C;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAO,KAAKC,WAAZ,MAA6B,wBAA7B,C,CAGA;;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,SAASC,aAAT,QAA8B,iBAA9B;;AAIA,IAAIC,UAAU,GAAIC,KAAD,IAAW;AAG1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAMG,MAAM,GAAGjB,SAAS,EAAxB,CAL0B,CAO1B;;AACA,QAAM;AAACkB,IAAAA;AAAD,MAAcb,WAAW,CAACc,KAAK,IAAIA,KAAV,CAA/B,CAR0B,CAS1B;AAGA;;AAGA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAM,QAAA,OAAO,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cANF,eAUE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAVF,eAeE;AACE,qBAAU,SADZ;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAfF,eAmBE;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAuBE,QAAC,MAAD;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,gBAAgB,EAAE,CAACC,IAAD,EAAMC,KAAN,KAAgBpB,gBAAgB,CAACmB,IAAD,EAAMC,KAAN,EAAYJ,MAAM,CAACK,IAAnB;AAA/D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEJ,SAAS,CAACK;AAA5B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA,kBADF;AA+BD,CA9CD;;AAiDA,OAAO,eAAeC,kBAAf,GAAoC;AACzC,QAAMC,UAAU,GAAGnB,eAAe,EAAlC;AACA,QAAM;AAAEoB,IAAAA;AAAF,MAAeD,UAArB;AAEA,QAAME,GAAG,GAAG,MAAMf,aAAa,EAA/B;AAEA,QAAMW,MAAM,GAAG,EAAf;;AACA,OAAI,MAAMK,GAAV,IAAiBD,GAAG,CAACE,IAArB,EAA0B;AACtBN,IAAAA,MAAM,CAACD,IAAP;AACIQ,MAAAA,EAAE,EAACF;AADP,OAEOD,GAAG,CAACE,IAAJ,CAASD,GAAT,CAFP;AAGM;;AAEVF,EAAAA,QAAQ,CAAC;AAACK,IAAAA,IAAI,EAACxB,WAAW,CAACyB,UAAlB;AAA8BC,IAAAA,OAAO,EAACV;AAAtC,GAAD,CAAR;AAIA,SAAO;AAAET,IAAAA,KAAK,EAAE;AAAEoB,MAAAA,iBAAiB,EAAET,UAAU,CAACU,QAAX;AAArB;AAAT,GAAP;AACD;AAED,eAAetB,UAAf","sourcesContent":["import {useRouter} from 'next/router'\nimport {findEventHandler, getEvents} from '../../redux-store/action'\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { initializeStore } from '../../redux-store/store'\nimport * as actionTypes from '../../redux-store/type'\n\n\n//components\nimport Head from 'next/head'\nimport Layout from '../../components/layout/layout';\nimport Eventlist from '../../components/events/event-list';\nimport EventSearch from '../../components/events/event-search';\nimport { getEventsData } from '../../api/event';\n\n\n\nlet EventsPage = (props) => {\n\n\n  console.log(props);\n\n  const router = useRouter()\n\n  // const dispatch = useDispatch()\n  const {eventPage} = useSelector(state => state )\n  // console.log(eventPage);\n\n\n  // useEffect(() =>{  },[])\n\n\n  return (\n    <>\n      <Head>\n        <meta charset=\"UTF-8\" />\n        <meta\n          name=\"keywords\"\n          content=\"give a short or mid description about the content keywords of your website\"\n        />\n        <meta\n          name=\"description\"\n          content=\"give a short or mid description about the contents of your website\"\n        />\n        <meta\n          name=\"author\"\n          content=\"write the name of the author of the webpage\"\n        />\n        {/* <meta name=\"refresh\" content=\"50\"/> */}\n        <meta\n          http-equi=\"refresh\"\n          content=\"5; url='write the url of your website'\"\n        />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      </Head>\n\n      <Layout>\n          <EventSearch findEventHandler={(year,month) => findEventHandler(year,month,router.push)}/>\n          <Eventlist items={eventPage.events} />\n      </Layout>\n      \n    </>\n  )\n}\n\n\nexport async function getServerSideProps() {\n  const reduxStore = initializeStore()\n  const { dispatch } = reduxStore\n\n  const res = await getEventsData()\n\n  const events = [];\n  for(const key in res.data){\n      events.push({\n          id:key,\n          ...res.data[key]}\n          )}\n\n  dispatch({type:actionTypes.GET_EVENTS, payload:events})  \n\n\n\n  return { props: { initialReduxState: reduxStore.getState() } }\n}\n\nexport default EventsPage"]},"metadata":{},"sourceType":"module"}