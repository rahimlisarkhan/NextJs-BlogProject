{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\"; // export const getEventsData = () => axios.get('https://nextjs-blog-79d6b-default-rtdb.firebaseio.com/events.json')\n\nexport async function getEventsData() {\n  const res = await axios.get('https://nextjs-blog-79d6b-default-rtdb.firebaseio.com/events.json');\n  const events = [];\n\n  for (const key in res.data) {\n    events.push(_objectSpread({\n      id: key\n    }, res.data[key]));\n  }\n\n  return events;\n}\nexport async function getFeaturedEvents() {\n  const allEvents = await getEventsData();\n  allEvents.filter(event => event.isFeatured);\n}\nexport async function getEventById(id) {\n  const allEvents = await getEventsData();\n  allEvents.find(event => event.id === id);\n}\nexport async function getFilteredEvents(year, month) {\n  const allEvents = await getEventsData();\n  let filteredEvents = allEvents.filter(event => {\n    const eventDate = new Date(event.date);\n    return eventDate.getFullYear() === year && eventDate.getMonth() === month - 1;\n  });\n  return filteredEvents;\n}","map":{"version":3,"sources":["/home/rahimlisarkhan/Documents/NEXT JS LESSON/Practice/NextJs-BlogProject/api/event.js"],"names":["axios","getEventsData","res","get","events","key","data","push","id","getFeaturedEvents","allEvents","filter","event","isFeatured","getEventById","find","getFilteredEvents","year","month","filteredEvents","eventDate","Date","date","getFullYear","getMonth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAGA;;AAEA,OAAO,eAAeC,aAAf,GAA8B;AAEnC,QAAMC,GAAG,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,mEAAV,CAAlB;AAEA,QAAMC,MAAM,GAAG,EAAf;;AAEA,OAAI,MAAMC,GAAV,IAAiBH,GAAG,CAACI,IAArB,EAA0B;AACxBF,IAAAA,MAAM,CAACG,IAAP;AACEC,MAAAA,EAAE,EAACH;AADL,OAEKH,GAAG,CAACI,IAAJ,CAASD,GAAT,CAFL;AAGI;;AAEF,SAAOD,MAAP;AACL;AAEA,OAAO,eAAeK,iBAAf,GAAkC;AAExC,QAAMC,SAAS,GAAG,MAAMT,aAAa,EAArC;AACAS,EAAAA,SAAS,CAACC,MAAV,CAAiBC,KAAK,IAAIA,KAAK,CAACC,UAAhC;AACD;AAED,OAAO,eAAeC,YAAf,CAA4BN,EAA5B,EAA+B;AAEpC,QAAME,SAAS,GAAG,MAAMT,aAAa,EAArC;AACAS,EAAAA,SAAS,CAACK,IAAV,CAAgBH,KAAD,IAAWA,KAAK,CAACJ,EAAN,KAAaA,EAAvC;AAED;AAGD,OAAO,eAAeQ,iBAAf,CAAiCC,IAAjC,EAAsCC,KAAtC,EAA4C;AACjD,QAAMR,SAAS,GAAG,MAAMT,aAAa,EAArC;AAEA,MAAIkB,cAAc,GAAGT,SAAS,CAACC,MAAV,CAAkBC,KAAD,IAAW;AAC/C,UAAMQ,SAAS,GAAG,IAAIC,IAAJ,CAAST,KAAK,CAACU,IAAf,CAAlB;AACA,WAAOF,SAAS,CAACG,WAAV,OAA4BN,IAA5B,IAAoCG,SAAS,CAACI,QAAV,OAAyBN,KAAK,GAAG,CAA5E;AACD,GAHoB,CAArB;AAKA,SAAOC,cAAP;AACD","sourcesContent":["import axios from \"axios\"\n\n\n// export const getEventsData = () => axios.get('https://nextjs-blog-79d6b-default-rtdb.firebaseio.com/events.json')\n\nexport async function getEventsData(){\n \n  const res = await axios.get('https://nextjs-blog-79d6b-default-rtdb.firebaseio.com/events.json')\n  \n  const events = [];\n\n  for(const key in res.data){\n    events.push({\n      id:key,\n      ...res.data[key]}\n      )}\n\n      return events\n}  \n\n export async function getFeaturedEvents(){\n\n  const allEvents = await getEventsData()\n  allEvents.filter(event => event.isFeatured);\n} \n   \nexport async function getEventById(id){\n\n  const allEvents = await getEventsData()\n  allEvents.find((event) => event.id === id);\n\n}\n  \n\nexport async function getFilteredEvents(year,month){\n  const allEvents = await getEventsData()\n\n  let filteredEvents = allEvents.filter((event) => {\n    const eventDate = new Date(event.date);\n    return eventDate.getFullYear() === year && eventDate.getMonth() === month - 1;\n  });\n\n  return filteredEvents;\n}\n"]},"metadata":{},"sourceType":"module"}