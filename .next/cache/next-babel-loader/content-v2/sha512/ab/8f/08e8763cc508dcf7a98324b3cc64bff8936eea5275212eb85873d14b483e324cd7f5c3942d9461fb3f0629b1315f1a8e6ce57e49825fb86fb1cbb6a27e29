{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport path from 'path';\nimport fs from 'fs/promises';\nimport Loading from '../../components/ui/loading';\nimport Layout from '../../components/layout/layout';\nexport default function ProductDetailPage(props) {\n  const {\n    loadedProduct\n  } = props;\n  if (!loadedProduct) return /*#__PURE__*/_jsx(Loading, {});\n  return /*#__PURE__*/_jsxs(Layout, {\n    children: [/*#__PURE__*/_jsx(\"h1\", {\n      children: loadedProduct.title\n    }), /*#__PURE__*/_jsx(\"p\", {\n      children: loadedProduct.description\n    })]\n  });\n}\n\nasync function getData() {\n  const filePath = path.join(process.cwd(), 'data', 'dummy-backend.json'),\n        jsonData = await fs.readFile(filePath),\n        data = JSON.parse(jsonData);\n  return data;\n}\n\nexport async function getStaticProps(context) {\n  const {\n    params\n  } = context,\n        data = await getData(),\n        product = data.product.find(el => el.id === params.pid);\n  if (!product) return {\n    notFound: true\n  };\n  return {\n    props: {\n      loadedProduct: product\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const data = await getData(),\n        ids = data.product.map(product => product.id),\n        pathsWithParams = ids.map(id => ({\n    params: {\n      pid: id\n    }\n  }));\n  return {\n    paths: pathsWithParams,\n    fallback: true\n  };\n}","map":null,"metadata":{},"sourceType":"module"}