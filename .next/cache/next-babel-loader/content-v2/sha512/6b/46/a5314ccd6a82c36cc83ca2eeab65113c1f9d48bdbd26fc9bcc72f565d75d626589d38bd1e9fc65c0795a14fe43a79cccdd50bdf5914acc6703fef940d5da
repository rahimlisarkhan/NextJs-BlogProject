{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rahimlisarkhan/Documents/NEXT JS LESSON/Practice/NextJs-BlogProject/pages/events/list/[...slug].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport { findEventHandler as _findEventHandler } from '../../../redux-store/action';\nimport Loading from \"../../../components/ui/loading\";\nimport useSWR from \"swr\";\nimport Eventlist from \"../../../components/events/event-list\";\nimport ErrorAlert from \"../../../components/ui/error-alert\";\nimport EventSearch from '../../../components/events/event-search';\nimport Layout from \"../../../components/layout/layout\";\nimport Head from \"next/head\"; // import { useEffect, useState } from \"react\";\n// import { URL } from \"../../../api/event\";\n// const { data, error } = useSWR(`${URL}/event.json`)\n// const [loadedEvent, setLoadedEvents] = useState()\n// useEffect(()=>{\n//   const events = [];\n//   for(const key in data){\n//     events.push({\n//       id:key,\n//       ...res.data[key]}\n//       )}\n//       setLoadedEvents(events)\n// },[data])\n\nvar FilteredEventsPage = function FilteredEventsPage(props) {\n  _s();\n\n  var router = useRouter(),\n      events = props.initialReduxState.eventPage.events;\n\n  if (!events) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }, _this);\n  } //data not found\n\n\n  if (!events || events.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Layout, {\n        children: [/*#__PURE__*/_jsxDEV(EventSearch, {\n          findEventHandler: function findEventHandler(year, month) {\n            return _findEventHandler(year, month, router.push);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(ErrorAlert, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No events found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true);\n  } //error message\n\n\n  if (props.hasError) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(EventSearch, {\n        findEventHandler: function findEventHandler(year, month) {\n          return _findEventHandler(year, month, router.push);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: \"Invalid filter value \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(EventSearch, {\n      findEventHandler: function findEventHandler(year, month) {\n        return _findEventHandler(year, month, router.push);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Eventlist, {\n      items: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(FilteredEventsPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = FilteredEventsPage;\nexport var __N_SSP = true;\nexport default FilteredEventsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilteredEventsPage\");","map":{"version":3,"sources":["/home/rahimlisarkhan/Documents/NEXT JS LESSON/Practice/NextJs-BlogProject/pages/events/list/[...slug].js"],"names":["useRouter","findEventHandler","Loading","useSWR","Eventlist","ErrorAlert","EventSearch","Layout","Head","FilteredEventsPage","props","router","events","initialReduxState","eventPage","length","year","month","push","hasError"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAAQC,gBAAgB,IAAhBA,iBAAR,QAA+B,6BAA/B;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,yCAAxB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AAIA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;AACA;AAGA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAIA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AAAA;;AAC9B,MAAAC,MAAM,GAAGX,SAAS,EAAlB;AAAA,MACCY,MADD,GACWF,KAAK,CAACG,iBAAN,CAAwBC,SADnC,CACCF,MADD;;AAIN,MAAI,CAACA,MAAL,EAAa;AAAE,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,aAAP;AAAmB,GALE,CAOpC;;;AACA,MAAI,CAACA,MAAD,IAAWA,MAAM,CAACG,MAAP,KAAkB,CAAjC,EAAoC;AAChC,wBACE;AAAA,8BACA,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,eADA,eAIA,QAAC,MAAD;AAAA,gCACI,QAAC,WAAD;AAAa,UAAA,gBAAgB,EAAE,0BAACC,IAAD,EAAMC,KAAN;AAAA,mBAAgBhB,iBAAgB,CAACe,IAAD,EAAMC,KAAN,EAAYN,MAAM,CAACO,IAAnB,CAAhC;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,QAAC,UAAD;AAAA,iCAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZ;AAAA;AAAA;AAAA;AAAA,iBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,eAJA;AAAA,oBADF;AAUE,GAnB8B,CAqBpC;;;AACA,MAAIR,KAAK,CAACS,QAAV,EAAmB;AACjB,wBACI,QAAC,MAAD;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,gBAAgB,EAAE,0BAACH,IAAD,EAAMC,KAAN;AAAA,iBAAgBhB,iBAAgB,CAACe,IAAD,EAAMC,KAAN,EAAYN,MAAM,CAACO,IAAnB,CAAhC;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAKA;;AAGF,sBACM,QAAC,MAAD;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,gBAAgB,EAAE,0BAACF,IAAD,EAAMC,KAAN;AAAA,eAAgBhB,iBAAgB,CAACe,IAAD,EAAMC,KAAN,EAAYN,MAAM,CAACO,IAAnB,CAAhC;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEN;AAAlB;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADN;AAMD,CArCD;;GAAMH,kB;UACWT,S;;;KADXS,kB;;AAuEN,eAAeA,kBAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport {findEventHandler} from '../../../redux-store/action'\nimport Loading from \"../../../components/ui/loading\";\nimport useSWR from \"swr\";\nimport Eventlist from \"../../../components/events/event-list\";\nimport ErrorAlert from \"../../../components/ui/error-alert\";\nimport EventSearch from '../../../components/events/event-search'\nimport Layout from \"../../../components/layout/layout\";\nimport { initializeStore } from \"../../../redux-store/store\";\nimport * as actionTypes from '../../../redux-store/type'\nimport { getFilteredEvents } from \"../../../data/dummy-data\";\nimport Head from \"next/head\";\n// import { useEffect, useState } from \"react\";\n// import { URL } from \"../../../api/event\";\n\n\n// const { data, error } = useSWR(`${URL}/event.json`)\n// const [loadedEvent, setLoadedEvents] = useState()\n\n\n// useEffect(()=>{\n//   const events = [];\n\n//   for(const key in data){\n//     events.push({\n//       id:key,\n//       ...res.data[key]}\n//       )}\n\n//       setLoadedEvents(events)\n// },[data])\n\n\n\nconst FilteredEventsPage = (props) => {\n  const router = useRouter(),\n        {events} = props.initialReduxState.eventPage\n\n\n  if (!events) { return <Loading />}\n\n  //data not found\n  if (!events || events.length === 0) { \n      return(\n        <>\n        <Head>\n\n        </Head>\n        <Layout>\n            <EventSearch findEventHandler={(year,month) => findEventHandler(year,month,router.push)}/>\n            <ErrorAlert><p>No events found</p></ErrorAlert>\n        </Layout>\n      </>\n      )}\n\n  //error message\n  if (props.hasError){ \n    return( \n        <Layout>\n            <EventSearch findEventHandler={(year,month) => findEventHandler(year,month,router.push)}/>\n            <ErrorAlert>Invalid filter value </ErrorAlert>\n        </Layout>\n  )}\n\n\n  return (\n        <Layout>\n            <EventSearch findEventHandler={(year,month) => findEventHandler(year,month,router.push)}/>\n            <Eventlist items={events} />\n        </Layout>\n  );\n};\n\n\n\n  \nexport async function getServerSideProps(context){\n\n  const {params} = context\n\n  const reduxStore = initializeStore(),\n        {dispatch} = reduxStore;\n      \n  const year = +params.slug[0],\n        month = +params.slug[1];\n\n  const filterData = getFilteredEvents({year, month})\n  dispatch({type:actionTypes.GET_EVENTS, payload:filterData})  \n\n\n  if (isNaN(year) ||\n      isNaN(month) ||\n      year > 2030 ||\n      year < 2021 ||\n      month < 1 ||\n      month > 12){ \n      return{ \n      props:{hasError:true}}}\n\n    //reduxstore\n    return { props: { initialReduxState: reduxStore.getState() } }\n\n}\n\n\nexport default FilteredEventsPage;\n"]},"metadata":{},"sourceType":"module"}