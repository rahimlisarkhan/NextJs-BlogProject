{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rahimlisarkhan/Documents/NEXT JS LESSON/Practice/NextJs-BlogProject/pages/events/list/[...slug].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\"; // import {findEventHandler} from '../../../redux-store/action'\n// import Loading from \"../../../components/ui/loading\";\n// import Eventlist from \"../../../components/events/event-list\";\n// import EventSearch from '../../../components/events/event-search'\n\nimport Layout from \"../../../components/layout/layout\";\n\nvar FilteredEventsPage = function FilteredEventsPage(props) {\n  _s();\n\n  var router = useRouter();\n  var events = props.initialReduxState.eventPage.events;\n  console.log(events);\n\n  if (!events) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }, _this);\n  }\n\n  if (!events || events.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(EventSearch, {\n        findEventHandler: function (_findEventHandler) {\n          function findEventHandler(_x, _x2) {\n            return _findEventHandler.apply(this, arguments);\n          }\n\n          findEventHandler.toString = function () {\n            return _findEventHandler.toString();\n          };\n\n          return findEventHandler;\n        }(function (year, month) {\n          return findEventHandler(year, month, router.push);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No events found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, _this);\n  }\n\n  if (props.hasError) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(EventSearch, {\n        findEventHandler: function (_findEventHandler2) {\n          function findEventHandler(_x3, _x4) {\n            return _findEventHandler2.apply(this, arguments);\n          }\n\n          findEventHandler.toString = function () {\n            return _findEventHandler2.toString();\n          };\n\n          return findEventHandler;\n        }(function (year, month) {\n          return findEventHandler(year, month, router.push);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: \"Invalid filter value \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(EventSearch, {\n      findEventHandler: function (_findEventHandler3) {\n        function findEventHandler(_x5, _x6) {\n          return _findEventHandler3.apply(this, arguments);\n        }\n\n        findEventHandler.toString = function () {\n          return _findEventHandler3.toString();\n        };\n\n        return findEventHandler;\n      }(function (year, month) {\n        return findEventHandler(year, month, router.push);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Eventlist, {\n      items: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(FilteredEventsPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = FilteredEventsPage;\nexport var __N_SSP = true;\nexport default FilteredEventsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilteredEventsPage\");","map":{"version":3,"sources":["/home/rahimlisarkhan/Documents/NEXT JS LESSON/Practice/NextJs-BlogProject/pages/events/list/[...slug].js"],"names":["useRouter","Layout","FilteredEventsPage","props","router","events","initialReduxState","eventPage","console","log","length","year","month","findEventHandler","push","hasError"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B,C,CACA;AACA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,mCAAnB;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AAAA;;AACpC,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AADoC,MAG7BK,MAH6B,GAGnBF,KAAK,CAACG,iBAAN,CAAwBC,SAHL,CAG7BF,MAH6B;AAKpCG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;;AAEA,MAAI,CAACA,MAAL,EAAa;AAAE,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,aAAP;AAAmB;;AAKlC,MAAI,CAACA,MAAD,IAAWA,MAAM,CAACK,MAAP,KAAkB,CAAjC,EAAoC;AAChC,wBACE,QAAC,MAAD;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,gBAAgB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UAAE,UAACC,IAAD,EAAMC,KAAN;AAAA,iBAAgBC,gBAAgB,CAACF,IAAD,EAAMC,KAAN,EAAYR,MAAM,CAACU,IAAnB,CAAhC;AAAA,SAAF;AAA7B;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,UAAD;AAAA,+BAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZ;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAKE;;AAEN,MAAIX,KAAK,CAACY,QAAV,EAAmB;AACjB,wBACI,QAAC,MAAD;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,gBAAgB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UAAE,UAACJ,IAAD,EAAMC,KAAN;AAAA,iBAAgBC,gBAAgB,CAACF,IAAD,EAAMC,KAAN,EAAYR,MAAM,CAACU,IAAnB,CAAhC;AAAA,SAAF;AAA7B;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAKA;;AAGF,sBACM,QAAC,MAAD;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,gBAAgB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,QAAE,UAACH,IAAD,EAAMC,KAAN;AAAA,eAAgBC,gBAAgB,CAACF,IAAD,EAAMC,KAAN,EAAYR,MAAM,CAACU,IAAnB,CAAhC;AAAA,OAAF;AAA7B;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAET;AAAlB;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADN;AAMD,CAnCD;;GAAMH,kB;UACWF,S;;;KADXE,kB;;AA0EN,eAAeA,kBAAf","sourcesContent":["import { useRouter } from \"next/router\";\n// import {findEventHandler} from '../../../redux-store/action'\n// import Loading from \"../../../components/ui/loading\";\n// import Eventlist from \"../../../components/events/event-list\";\n// import EventSearch from '../../../components/events/event-search'\nimport Layout from \"../../../components/layout/layout\";\nimport { initializeStore } from \"../../../redux-store/store\";\nimport * as actionTypes from '../../../redux-store/type'\nimport { getFilteredEvents } from \"../../../data/dummy-data\";\n\n\nconst FilteredEventsPage = (props) => {\n  const router = useRouter();\n\n  const {events} = props.initialReduxState.eventPage\n\n  console.log(events);\n\n  if (!events) { return <Loading />}\n\n\n  \n \n  if (!events || events.length === 0) { \n      return(\n        <Layout>\n            <EventSearch findEventHandler={(year,month) => findEventHandler(year,month,router.push)}/>\n            <ErrorAlert><p>No events found</p></ErrorAlert>\n        </Layout>\n      )}\n\n  if (props.hasError){ \n    return( \n        <Layout>\n            <EventSearch findEventHandler={(year,month) => findEventHandler(year,month,router.push)}/>\n            <ErrorAlert>Invalid filter value </ErrorAlert>\n        </Layout>\n  )}\n\n\n  return (\n        <Layout>\n            <EventSearch findEventHandler={(year,month) => findEventHandler(year,month,router.push)}/>\n            <Eventlist items={events} />\n        </Layout>\n  );\n};\n\n\n\n  \nexport async function getServerSideProps(context){\n\n  const {params} = context\n\n  const reduxStore = initializeStore(),\n        {dispatch} = reduxStore\n  \n\n      \n  const filterDate = params.slug,\n        year = +filterDate[0],\n        month = +filterDate[1];\n\n  const filterData = getFilteredEvents({year, month})\n  dispatch({type:actionTypes.GET_EVENTS, payload:filterData})  \n\n\n  if (isNaN(year) ||\n      isNaN(month) ||\n      year > 2030 ||\n      year < 2021 ||\n      month < 1 ||\n      month > 12){ \n      return{ \n      props:{hasError:true}}}\n\n    \n    //reduxstore\n    return { props: { initialReduxState: reduxStore.getState() } }\n\n\n}\n\n\nexport default FilteredEventsPage;\n"]},"metadata":{},"sourceType":"module"}