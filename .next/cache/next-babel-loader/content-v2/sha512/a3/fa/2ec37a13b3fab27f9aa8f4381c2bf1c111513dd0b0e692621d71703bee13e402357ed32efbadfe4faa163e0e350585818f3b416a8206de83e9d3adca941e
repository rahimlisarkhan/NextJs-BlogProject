{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/rahimlisarkhan/Documents/NEXT JS LESSON/Practice/NextJs-BlogProject/pages/events/list/[...slug].js\";\nimport { useRouter } from \"next/router\";\nimport { findEventHandler } from '../../../redux-store/action';\nimport Loading from \"../../../components/ui/loading\";\nimport useSWR from \"swr\";\nimport Eventlist from \"../../../components/events/event-list\";\nimport ErrorAlert from \"../../../components/ui/error-alert\";\nimport EventSearch from '../../../components/events/event-search';\nimport Layout from \"../../../components/layout/layout\";\nimport { initializeStore } from \"../../../redux-store/store\";\nimport * as actionTypes from '../../../redux-store/type';\nimport { getFilteredEvents } from \"../../../data/dummy-data\";\nimport Head from \"next/head\"; // import { useEffect, useState } from \"react\";\n// import { URL } from \"../../../api/event\";\n// const { data, error } = useSWR(`${URL}/event.json`)\n// const [loadedEvent, setLoadedEvents] = useState()\n// useEffect(()=>{\n//   const events = [];\n//   for(const key in data){\n//     events.push({\n//       id:key,\n//       ...res.data[key]}\n//       )}\n//       setLoadedEvents(events)\n// },[data])\n\nconst FilteredEventsPage = props => {\n  const router = useRouter(),\n        {\n    events\n  } = props.initialReduxState.eventPage;\n\n  if (!events) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }, this);\n  } //data not found\n\n\n  if (!events || events.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"description\",\n          content: `All events for ${router.query.slug[0]}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Filtered Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Layout, {\n        children: [/*#__PURE__*/_jsxDEV(EventSearch, {\n          findEventHandler: (year, month) => findEventHandler(year, month, router.push)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorAlert, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No events found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } //error message\n\n\n  if (props.hasError) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(EventSearch, {\n        findEventHandler: (year, month) => findEventHandler(year, month, router.push)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: \"Invalid filter value \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(EventSearch, {\n      findEventHandler: (year, month) => findEventHandler(year, month, router.push)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Eventlist, {\n      items: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getServerSideProps(context) {\n  const {\n    params\n  } = context;\n  const reduxStore = initializeStore(),\n        {\n    dispatch\n  } = reduxStore;\n  const year = +params.slug[0],\n        month = +params.slug[1];\n  const filterData = getFilteredEvents({\n    year,\n    month\n  });\n  dispatch({\n    type: actionTypes.GET_EVENTS,\n    payload: filterData\n  });\n\n  if (isNaN(year) || isNaN(month) || year > 2030 || year < 2021 || month < 1 || month > 12) {\n    return {\n      props: {\n        hasError: true\n      }\n    };\n  } //reduxstore\n\n\n  return {\n    props: {\n      initialReduxState: reduxStore.getState()\n    }\n  };\n}\nexport default FilteredEventsPage;","map":{"version":3,"sources":["/home/rahimlisarkhan/Documents/NEXT JS LESSON/Practice/NextJs-BlogProject/pages/events/list/[...slug].js"],"names":["useRouter","findEventHandler","Loading","useSWR","Eventlist","ErrorAlert","EventSearch","Layout","initializeStore","actionTypes","getFilteredEvents","Head","FilteredEventsPage","props","router","events","initialReduxState","eventPage","length","query","slug","year","month","push","hasError","getServerSideProps","context","params","reduxStore","dispatch","filterData","type","GET_EVENTS","payload","isNaN","getState"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\nimport {findEventHandler} from '../../../redux-store/action'\nimport Loading from \"../../../components/ui/loading\";\nimport useSWR from \"swr\";\nimport Eventlist from \"../../../components/events/event-list\";\nimport ErrorAlert from \"../../../components/ui/error-alert\";\nimport EventSearch from '../../../components/events/event-search'\nimport Layout from \"../../../components/layout/layout\";\nimport { initializeStore } from \"../../../redux-store/store\";\nimport * as actionTypes from '../../../redux-store/type'\nimport { getFilteredEvents } from \"../../../data/dummy-data\";\nimport Head from \"next/head\";\n// import { useEffect, useState } from \"react\";\n// import { URL } from \"../../../api/event\";\n\n\n// const { data, error } = useSWR(`${URL}/event.json`)\n// const [loadedEvent, setLoadedEvents] = useState()\n\n\n// useEffect(()=>{\n//   const events = [];\n\n//   for(const key in data){\n//     events.push({\n//       id:key,\n//       ...res.data[key]}\n//       )}\n\n//       setLoadedEvents(events)\n// },[data])\n\n\n\nconst FilteredEventsPage = (props) => {\n  const router = useRouter(),\n        {events} = props.initialReduxState.eventPage\n\n\n  if (!events) { return <Loading />}\n\n  //data not found\n  if (!events || events.length === 0) { \n      return(\n        <>\n        <Head>  \n          <meta name='description' content={`All events for ${router.query.slug[0]}`}/>\n          <title>Filtered Events</title>\n        </Head>\n        <Layout>\n            <EventSearch findEventHandler={(year,month) => findEventHandler(year,month,router.push)}/>\n            <ErrorAlert><p>No events found</p></ErrorAlert>\n        </Layout>\n      </>\n      )}\n\n  //error message\n  if (props.hasError){ \n    return( \n        <Layout>\n            <EventSearch findEventHandler={(year,month) => findEventHandler(year,month,router.push)}/>\n            <ErrorAlert>Invalid filter value </ErrorAlert>\n        </Layout>\n  )}\n\n\n  return (\n        <Layout>\n            <EventSearch findEventHandler={(year,month) => findEventHandler(year,month,router.push)}/>\n            <Eventlist items={events} />\n        </Layout>\n  );\n};\n\n\n\n  \nexport async function getServerSideProps(context){\n\n  const {params} = context\n\n  const reduxStore = initializeStore(),\n        {dispatch} = reduxStore;\n      \n  const year = +params.slug[0],\n        month = +params.slug[1];\n\n  const filterData = getFilteredEvents({year, month})\n  dispatch({type:actionTypes.GET_EVENTS, payload:filterData})  \n\n\n  if (isNaN(year) ||\n      isNaN(month) ||\n      year > 2030 ||\n      year < 2021 ||\n      month < 1 ||\n      month > 12){ \n      return{ \n      props:{hasError:true}}}\n\n    //reduxstore\n    return { props: { initialReduxState: reduxStore.getState() } }\n\n}\n\n\nexport default FilteredEventsPage;\n"]},"metadata":{},"sourceType":"module"}